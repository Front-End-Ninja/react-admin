{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport { Button, Menu, MenuItem, Tooltip, IconButton, useMediaQuery } from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { shallowEqual } from 'react-redux';\nimport { useListSortContext, useTranslate } from 'ra-core';\n/**\n * A button allowing to change the sort field and order.\n *\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\n *\n * Expects one 'fields' prop, containing an array of field strings that shall\n * be used and displayed for sorting.\n *\n * When users clicks on the <SortButton>, they see a dropdown list with the\n * proposed sorting fields. Once they click on one of these fields, the related\n * list refreshes, re-sorted.\n *\n * @example\n *\n * import * as React from 'react';\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\n *\n * const ListActions: FC = props => (\n *     <TopToolbar>\n *         <SortButton fields={['reference', 'sales', 'stock']} />\n *         <CreateButton basePath={props.basePath} />\n *         <ExportButton />\n *     </TopToolbar>\n * );\n */\n\nvar SortButton = function (_a) {\n  var fields = _a.fields,\n      _b = _a.label,\n      label = _b === void 0 ? 'ra.sort.sort_by' : _b,\n      _c = _a.icon,\n      icon = _c === void 0 ? defaultIcon : _c;\n\n  var _d = useListSortContext(),\n      resource = _d.resource,\n      currentSort = _d.currentSort,\n      setSort = _d.setSort;\n\n  var translate = useTranslate();\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('xs');\n  });\n\n  var _e = React.useState(null),\n      anchorEl = _e[0],\n      setAnchorEl = _e[1];\n\n  var handleClick = function (event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function () {\n    setAnchorEl(null);\n  };\n\n  var handleChangeSort = function (event) {\n    var field = event.currentTarget.dataset.sort;\n    setSort(field, field === currentSort.field ? inverseOrder(currentSort.order) : 'ASC');\n    setAnchorEl(null);\n  };\n\n  var buttonLabel = translate(label, {\n    field: translate(\"resources.\" + resource + \".fields.\" + currentSort.field),\n    order: translate(\"ra.sort.\" + currentSort.order),\n    _: label\n  });\n  return React.createElement(React.Fragment, null, isXSmall ? React.createElement(Tooltip, {\n    title: buttonLabel\n  }, React.createElement(IconButton, {\n    \"aria-label\": buttonLabel,\n    color: \"primary\",\n    onClick: handleClick\n  }, icon)) : React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    color: \"primary\",\n    onClick: handleClick,\n    startIcon: icon,\n    endIcon: React.createElement(ArrowDropDownIcon, null),\n    size: \"small\"\n  }, buttonLabel), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, fields.map(function (field) {\n    return React.createElement(MenuItem, {\n      onClick: handleChangeSort,\n      \"data-sort\": field,\n      key: field\n    }, translate(\"resources.\" + resource + \".fields.\" + field), ' ', translate(\"ra.sort.\" + (currentSort.field === field ? inverseOrder(currentSort.order) : 'ASC')));\n  })));\n};\n\nvar defaultIcon = React.createElement(SortIcon, null);\n\nvar inverseOrder = function (sort) {\n  return sort === 'ASC' ? 'DESC' : 'ASC';\n};\n\nvar arePropsEqual = function (prevProps, nextProps) {\n  return shallowEqual(prevProps.fields, nextProps.fields);\n};\n\nexport default memo(SortButton, arePropsEqual);","map":{"version":3,"sources":["/Users/lbarylak/react-admin/client/node_modules/ra-ui-materialui/esm/button/SortButton.js"],"names":["React","memo","Button","Menu","MenuItem","Tooltip","IconButton","useMediaQuery","SortIcon","ArrowDropDownIcon","shallowEqual","useListSortContext","useTranslate","SortButton","_a","fields","_b","label","_c","icon","defaultIcon","_d","resource","currentSort","setSort","translate","isXSmall","theme","breakpoints","down","_e","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleChangeSort","field","dataset","sort","inverseOrder","order","buttonLabel","_","createElement","Fragment","title","color","onClick","startIcon","endIcon","size","id","keepMounted","open","Boolean","onClose","map","key","arePropsEqual","prevProps","nextProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { memo } from 'react';\nimport { Button, Menu, MenuItem, Tooltip, IconButton, useMediaQuery, } from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { shallowEqual } from 'react-redux';\nimport { useListSortContext, useTranslate } from 'ra-core';\n/**\n * A button allowing to change the sort field and order.\n *\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\n *\n * Expects one 'fields' prop, containing an array of field strings that shall\n * be used and displayed for sorting.\n *\n * When users clicks on the <SortButton>, they see a dropdown list with the\n * proposed sorting fields. Once they click on one of these fields, the related\n * list refreshes, re-sorted.\n *\n * @example\n *\n * import * as React from 'react';\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\n *\n * const ListActions: FC = props => (\n *     <TopToolbar>\n *         <SortButton fields={['reference', 'sales', 'stock']} />\n *         <CreateButton basePath={props.basePath} />\n *         <ExportButton />\n *     </TopToolbar>\n * );\n */\nvar SortButton = function (_a) {\n    var fields = _a.fields, _b = _a.label, label = _b === void 0 ? 'ra.sort.sort_by' : _b, _c = _a.icon, icon = _c === void 0 ? defaultIcon : _c;\n    var _d = useListSortContext(), resource = _d.resource, currentSort = _d.currentSort, setSort = _d.setSort;\n    var translate = useTranslate();\n    var isXSmall = useMediaQuery(function (theme) {\n        return theme.breakpoints.down('xs');\n    });\n    var _e = React.useState(null), anchorEl = _e[0], setAnchorEl = _e[1];\n    var handleClick = function (event) {\n        setAnchorEl(event.currentTarget);\n    };\n    var handleClose = function () {\n        setAnchorEl(null);\n    };\n    var handleChangeSort = function (event) {\n        var field = event.currentTarget.dataset.sort;\n        setSort(field, field === currentSort.field\n            ? inverseOrder(currentSort.order)\n            : 'ASC');\n        setAnchorEl(null);\n    };\n    var buttonLabel = translate(label, {\n        field: translate(\"resources.\" + resource + \".fields.\" + currentSort.field),\n        order: translate(\"ra.sort.\" + currentSort.order),\n        _: label,\n    });\n    return (React.createElement(React.Fragment, null,\n        isXSmall ? (React.createElement(Tooltip, { title: buttonLabel },\n            React.createElement(IconButton, { \"aria-label\": buttonLabel, color: \"primary\", onClick: handleClick }, icon))) : (React.createElement(Button, { \"aria-controls\": \"simple-menu\", \"aria-haspopup\": \"true\", color: \"primary\", onClick: handleClick, startIcon: icon, endIcon: React.createElement(ArrowDropDownIcon, null), size: \"small\" }, buttonLabel)),\n        React.createElement(Menu, { id: \"simple-menu\", anchorEl: anchorEl, keepMounted: true, open: Boolean(anchorEl), onClose: handleClose }, fields.map(function (field) { return (React.createElement(MenuItem, { onClick: handleChangeSort, \"data-sort\": field, key: field },\n            translate(\"resources.\" + resource + \".fields.\" + field),\n            ' ',\n            translate(\"ra.sort.\" + (currentSort.field === field\n                ? inverseOrder(currentSort.order)\n                : 'ASC')))); }))));\n};\nvar defaultIcon = React.createElement(SortIcon, null);\nvar inverseOrder = function (sort) { return (sort === 'ASC' ? 'DESC' : 'ASC'); };\nvar arePropsEqual = function (prevProps, nextProps) {\n    return shallowEqual(prevProps.fields, nextProps.fields);\n};\nexport default memo(SortButton, arePropsEqual);\n"]},"metadata":{},"sourceType":"module"}